Question:
          Given the root of a binary tree, invert the tree, and return its root.
          
Test Case 1:
          Input: root = [4,2,7,1,3,6,9]
          Output: [4,7,2,9,6,3,1]
          
Test Case 2:
          Input: root = []
          Output: []
          
Constraints:
          The number of nodes in the tree is in the range [0, 100].
          -100 <= Node.val <= 100
          
Logics:
          /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
  public TreeNode invertTree(TreeNode root) {
    if (root == null)
      return null;

    TreeNode left = root.left;
    TreeNode right = root.right;
    root.left = invertTree(right);
    root.right = invertTree(left);
    return root;
  }
}
