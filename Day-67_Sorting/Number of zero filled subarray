Question:
          Given an integer array nums, return the number of subarrays filled with 0.
          A subarray is a contiguous non-empty sequence of elements within an array.
          
Input: nums = [1,3,0,0,2,0,0,4]
Output: 6
Explanation: 
              There are 4 occurrences of [0] as a subarray.
              There are 2 occurrences of [0,0] as a subarray.
              There is no occurrence of a subarray with a size more than 2 filled with 0. Therefore, we return 6.
              
Input: nums = [0,0,0,2,0,0]
Output: 9
Explanation:
              There are 5 occurrences of [0] as a subarray.
              There are 3 occurrences of [0,0] as a subarray.
              There is 1 occurrence of [0,0,0] as a subarray.
              There is no occurrence of a subarray with a size more than 3 filled with 0. Therefore, we return 9.
              
Constraints:

                1 <= nums.length <= 105
                -109 <= nums[i] <= 109
                
 Logics:-
            
class Solution {
       public long zeroFilledSubarray(int[] nums) {
        long cnt = 0, zeroSubarraysEndingAtCurrentIndex = 0;
        for (int n : nums) {
            if (n == 0) {
                cnt += ++zeroSubarraysEndingAtCurrentIndex;
            }else {
                zeroSubarraysEndingAtCurrentIndex = 0;
            }
        }
        return cnt;
    }

}

